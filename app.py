# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IcbLgxYp4g3OV_U4KxlSKqq51_-ZhjmD
"""

# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bwiv1OdOsglwGYDt3v-iS9b8VgPGgYQ1
"""

import pandas as pd
import numpy as np
import ipaddress
from urllib.parse import urlparse, urljoin
from urllib.parse import urlsplit
from urllib.parse import quote
import tldextract
import re
import whois
import os
import hashlib
from ngram import NGram
from datetime import datetime
import socket
import requests
import ipaddress
from bs4 import BeautifulSoup
from requests.exceptions import RequestException
from dissert import features_extraction
from flask import Flask, render_template, request
import pickle
import joblib
from sklearn.tree import DecisionTreeClassifier

app = Flask(__name__)

model = joblib.load('decision_tree_model.pkl')


@app.route('/', methods=['GET', 'POST'])
def index():
    message = ""

    if request.method == 'POST':
        url = request.form['url']
        feat_extr = features_extraction(url)
        nfeat = np.array(feat_extr)
        features = nfeat.reshape(1, -1)
        prediction = model.predict(features)

        if prediction[0] == 0:
            message = 'The website is safe to visit.'
        elif prediction[0] == 1:
            message = 'we just ate a phish!.'

    return render_template('index.html', message=message)


if __name__ == "__main__":
    app.run(debug=True)